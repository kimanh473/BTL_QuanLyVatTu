@model ProductDtoex
@{
    ViewData["Title"] = "QLVT - Xuất kho vật tư";
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    </head>
    <body>
        <div class="container-sm mt-5">
            <h4>Thông tin xuất kho</h4>
            <form method="post" enctype="multipart/form-data">
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Mã chứng từ</label>
                    <div class="col-sm-8">
                        <input class="form-control" asp-for="doc_id" />
                        <span asp-validation-for="doc_id" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Mã vật tư</label>
                    <div class="col-sm-8">
                        <select class="form-select" id="product_id">
                            <option value="">Chọn mã vật tư</option>
                            @foreach (var product in ViewBag.ProductList)
                            {
                                <option value="@product.product_id">@product.product_id</option>
                            }
                        </select>
                        <span class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Tên vật tư</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="product_name" asp-for="product_name" readonly />
                        <span asp-validation-for="product_name" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Loại hàng</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="product_type" asp-for="product_type" readonly />
                        <span asp-validation-for="product_type" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Số lượng</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="quantity" asp-for="quantity" />
                        <span asp-validation-for="quantity" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Đơn vị sản phẩm</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="currency" asp-for="currency" readonly />
                        <span asp-validation-for="currency" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3">
                    <label class="col-sm-4 col-form-label">Đơn giá xuất</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="export_price" asp-for="export_price" />
                        <span asp-validation-for="export_price" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-2">
                    <label class="col-sm-4 col-form-label">Thành tiền</label>
                    <div class="col-sm-8">
                        <input class="form-control" id="total" asp-for="total" readonly />
                        <span asp-validation-for="total" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-2">
                    <label class="col-sm-4 col-form-label">Người đề nghị</label>
                    <div class="col-sm-8">
                        <input class="form-control"asp-for="promoter"/>
                        <span asp-validation-for="promoter" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-2">
                    <label class="col-sm-4 col-form-label">Người nhận</label>
                    <div class="col-sm-8">
                        <input class="form-control" asp-for="receiver" />
                        <span asp-validation-for="receiver" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-2">
                    <label class="col-sm-4 col-form-label">Mô tả/Ghi chú</label>
                    <div class="col-sm-8">
                        <textarea class="form-control" asp-for="note"></textarea>
                        <span asp-validation-for="note" class="text-danger"></span>
                    </div>
                </div>
                <div class="row-mb-3 bottom-2 start-0 w-50 py-5">
                    <div class="container">
                        <div class="row">
                            <div class="col d-grid px-0">
                                <button type="submit" class="btn btn-primary">Lưu</button>
                            </div>
                            <div class="col d-grid">
                                <a class="btn btn-outline-primary" asp-controller="List" asp-action="ListProduct" role="button">Hủy</a>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>

            <script>
                //Tự động fill dữ liệu
                document.addEventListener("DOMContentLoaded", function () {
                    const productDropdown = document.getElementById("product_id");
                    let maxQuantity = 0;

                    productDropdown.addEventListener("change", function () {
                        const product_id_detail = productDropdown.value;

                        if (product_id_detail) {
                            fetch(`/List/GetProductDetails?product_id_detail=${product_id_detail}`)
                                .then(response => response.json())
                                .then(data => {
                                    if (data) {
                                        const productNameInput = document.getElementById("product_name");
                                        const productTypeInput = document.getElementById("product_type");
                                        const currencyInput = document.getElementById("currency");                                      
                                        const quantityInput = document.getElementById("quantity");

                                        if (productNameInput) productNameInput.value = data.product_name;
                                        if (productTypeInput) productTypeInput.value = data.product_type;
                                        if (currencyInput) currencyInput.value = data.currency;
                                        if (quantityInput) quantityInput.value = data.quantity;
                                        
                                        maxQuantity = data.quantity;
                                    }
                                })
                                .catch(error => console.error('Error:', error));
                        }
                    });

                    // Tính toán tổng và kiểm tra số lượng
                    const quantityInput = document.getElementById("quantity");
                    const exportPriceInput = document.getElementById("export_price");
                    const totalInput = document.getElementById("total");

                    function calculateTotal() {
                        const quantity = parseInt(quantityInput.value) || 0;
                        const exportPrice = parseFloat(exportPriceInput.value) || 0;

                        // Kiểm tra số lượng nhập vào
                        if (quantity > maxQuantity) {
                            alert(`Số lượng không được vượt quá ${maxQuantity}`);
                            quantityInput.value = maxQuantity; // Reset về giá trị tối đa
                        }

                        const total = quantity * exportPrice;
                        totalInput.value = total.toFixed(0);
                    }

                    if (quantityInput) quantityInput.addEventListener("input", calculateTotal);
                    if (exportPriceInput) exportPriceInput.addEventListener("input", calculateTotal);
                 });
            </script>
            <style>
                .btn-outline-primary:hover {
                    background-color: dimgrey;
                    border-color: black;
                    color: white;
                }
            </style>
    </body>
}
